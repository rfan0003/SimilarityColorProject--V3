<defaults>
/ screencolor = (127,127,127)
</defaults>

<include>
/ file = "CircleLocation.iqx"
/ file = "PictureAndText.iqx"
/ file = "ResponseStep.iqx"
/ file = "BaseScript.iqx"
/ file = "InstructionPage.iqx"
/ file = "PracticeTrial.iqx"
</include>

<values>
/response = 0
/trial_number = 0
/Cross_position = 0
/Circle_1 = 0
/Circle_2 = 0
/Position_1 = 0
/Position_2 = 0
/Color_1 = 0
/Color_2 = 0
/response_time = 0
/temp = 0

/color1 = #ff0000
/color2 = #ffaa00
/color3 = #aaff00
/color4 = #00ff00
/color5 = #00ffa9
/color6 = #00a9ff
/color7 = #0000ff
/color8 = #aa00ff
/color9 = #ff00aa

</values>


********************************************************************************************************************************
********************************************************************************************************************************
<trial Fixiation>
/ stimulusframes = [1 = cross]
/ timeout = 500
/ recorddata = false
/ ontrialend = [
	values.trial_number += 1;
	values.Circle_1 = 0;
	values.Circle_2 = 0;
	values.Position_1 = 0;
	values.Position_2 = 0;
	values.Color_1 = 0;
	values.Color_2 = 0;
	values.response = 0;
]
/ branch = [
	trial.PresentCircles
]
</trial>


<counter order>
/ select = noreplace(1-243)
/ selectionrate = block
</counter>

<trial PresentCircles>
/ ontrialbegin = [
	values.angle_1 = rand(-90,90);
	values.angle_3 = rand(values.range_of_P_min,values.range_of_P_max);
	if(values.angle_1 < 0){
		if(abs(values.angle_1) > 90 - values.angle_min_F){
			values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
		}else if (abs(values.angle_1) <= 90 - values.angle_min_F){
			if(counter.F2_position.selectedvalue == -1){
				values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
			}else{
				values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
			}
		}
	}else{
		if(values.angle_1 > 90 - values.angle_min_F){
			values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
		}else if (values.angle_1 <= 90 - values.angle_min_F){
			if(counter.F2_position.selectedvalue == -1){
				values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
			}else{
				values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
			}
		}
	}
	
	if(values.angle_3 < 0){
		if(abs(values.angle_3) > values.range_of_P_max - values.angle_min_P){
			values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
		}else if(abs(values.angle_3) <= values.range_of_P_max - values.angle_min_P){
			if(counter.P2_position.selectedvalue == -1){
				values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
			}else{
				values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
			}
		}
	}else{
		if(values.angle_3 > values.range_of_P_max - values.angle_min_P){
			values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
		}else if(values.angle_3 <= values.range_of_P_max - values.angle_min_P){
			if(counter.P2_position.selectedvalue == -1){
				values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
			}else{
				values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
			}
		}
	}
	
	
	if(item.PositionComination.item(counter.order.selectedvalue) == "FF"){
		trial.PresentCircles.insertstimulusframe(text.cross,1);
		trial.PresentCircles.insertstimulusframe(shape.F1,1);
		trial.PresentCircles.insertstimulusframe(shape.F2,1);
		values.Circle_1 = -1;
		values.Circle_2 = -1;
		values.Position_1 = values.angle_1;
		values.Position_2 = values.angle_2;
		
		if(item.Circle_1_color.item(counter.order.selectedvalue) == "1"){
			shape.F1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "2"){
			shape.F1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "3"){
			shape.F1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "4"){
			shape.F1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "5"){
			shape.F1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "6"){
			shape.F1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "7"){
			shape.F1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "8"){
			shape.F1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.F1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.Circle_2_color.item(counter.order.selectedvalue) == "1"){
			shape.F2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "2"){
			shape.F2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "3"){
			shape.F2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "4"){
			shape.F2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "5"){
			shape.F2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "6"){
			shape.F2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "7"){
			shape.F2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "8"){
			shape.F2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.F2.color = values.color9;
			values.Color_2 = 9;
		}
	}else if (item.PositionComination.item(counter.order.selectedvalue) == "FP"){
		trial.PresentCircles.insertstimulusframe(text.cross,1);
		trial.PresentCircles.insertstimulusframe(shape.F1,1);
		trial.PresentCircles.insertstimulusframe(shape.P1,1);
		values.Circle_1 = -1;
		values.Circle_2 = 1;
		values.Position_1 = values.angle_1;
		values.Position_2 = values.angle_3;
		
		if(item.Circle_1_color.item(counter.order.selectedvalue) == "1"){
			shape.F1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "2"){
			shape.F1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "3"){
			shape.F1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "4"){
			shape.F1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "5"){
			shape.F1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "6"){
			shape.F1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "7"){
			shape.F1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "8"){
			shape.F1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.F1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.Circle_2_color.item(counter.order.selectedvalue) == "1"){
			shape.P1.color = values.color1;
			values.Color_2 = 1;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "2"){
			shape.P1.color = values.color2;
			values.Color_2 = 2;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "3"){
			shape.P1.color = values.color3;
			values.Color_2 = 3;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "4"){
			shape.P1.color = values.color4;
			values.Color_2 = 4;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "5"){
			shape.P1.color = values.color5;
			values.Color_2 = 5;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "6"){
			shape.P1.color = values.color6;
			values.Color_2 = 6;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "7"){
			shape.P1.color = values.color7;
			values.Color_2 = 7;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "8"){
			shape.P1.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.P1.color = values.color9;
			values.Color_2 = 9;
		}
	}else if (item.PositionComination.item(counter.order.selectedvalue) == "PP"){
		trial.PresentCircles.insertstimulusframe(text.cross,1);
		trial.PresentCircles.insertstimulusframe(shape.P1,1);
		trial.PresentCircles.insertstimulusframe(shape.P2,1);
		values.Circle_1 = 1;
		values.Circle_2 = 1;
		values.Position_1 = values.angle_3;
		values.Position_2 = values.angle_4;
		
		if(item.Circle_1_color.item(counter.order.selectedvalue) == "1"){
			shape.P1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "2"){
			shape.P1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "3"){
			shape.P1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "4"){
			shape.P1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "5"){
			shape.P1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "6"){
			shape.P1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "7"){
			shape.P1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.Circle_1_color.item(counter.order.selectedvalue) == "8"){
			shape.P1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.P1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.Circle_2_color.item(counter.order.selectedvalue) == "1"){
			shape.P2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "2"){
			shape.P2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "3"){
			shape.P2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "4"){
			shape.P2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "5"){
			shape.P2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "6"){
			shape.P2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "7"){
			shape.P2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.Circle_2_color.item(counter.order.selectedvalue) == "8"){
			shape.P2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.P2.color = values.color9;
			values.Color_2 = 9;
		}
	}
	
]
/ stimulusframes = []
/ timeout = 250
/ recorddata = false
/ ontrialend = [
	trial.PresentCircles.clearstimulusframes();
]
/ branch = [
	trial.ResponseStep
]
</trial>

********************************************************************************************************************************
********************************************************************************************************************************
<trial ResponseStep>
/ ontrialbegin = [
	if(item.PositionComination.item(counter.order.selectedvalue) == "FF"){
		trial.ResponseStep.insertstimulusframe(text.cross,1);
		trial.ResponseStep.insertstimulusframe(picture.F1_resp,1);
		trial.ResponseStep.insertstimulusframe(picture.F2_resp,1);
	}else if (item.PositionComination.item(counter.order.selectedvalue) == "FP"){
		trial.ResponseStep.insertstimulusframe(text.cross,1);
		trial.ResponseStep.insertstimulusframe(picture.F1_resp,1);
		trial.ResponseStep.insertstimulusframe(picture.P1_resp,1);
	}else if (item.PositionComination.item(counter.order.selectedvalue) == "PP"){
		trial.ResponseStep.insertstimulusframe(text.cross,1);
		trial.ResponseStep.insertstimulusframe(picture.P1_resp,1);
		trial.ResponseStep.insertstimulusframe(picture.P2_resp,1);
	}
]
/ stimulusframes = []
/ recorddata = false
/ validresponse = (30,31,32,33,36,37,38,39)
/ ontrialend = [
	trial.ResponseStep.clearstimulusframes();
	
	if(trial.ResponseStep.response == 30){
		values.response = 0;
	}else if(trial.ResponseStep.response == 31){
		values.response = 1;
	}else if(trial.ResponseStep.response == 32){
		values.response = 2;
	}else if(trial.ResponseStep.response == 33){
		values.response = 3;
	}else if(trial.ResponseStep.response == 36){
		values.response = 4;
	}else if(trial.ResponseStep.response == 37){
		values.response = 5;
	}else if(trial.ResponseStep.response == 38){
		values.response = 6;
	}else{
		values.response = 7;
	}
	
	values.response_time = trial.ResponseStep.latency;
	
]
/ branch = [
	trial.feedback
]
</trial>


<trial feedback>
/ ontrialbegin = [
	if (values.response == 0){
		values.temp = 1;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 1){
		values.temp = 2;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 2){
		values.temp = 3;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 3){
		values.temp = 4;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 4){
		values.temp = 5;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 5){
		values.temp = 6;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 6){
		values.temp = 7;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}else{
		values.temp = 8;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback.insertstimulusframe(text.you_press_present,1);
	}
]
/ stimulusframes = []
/ recorddata = true
/ timeout = 1000
/ ontrialend = [
	trial.feedback.clearstimulusframes();
	text.feedback_present.clearitems();
]
</trial>

<block Instruction>
/ trials = [1 = Instruction_1]
</block>

<block Throughout_practice>
/ trials = [1 = Fixiation_practice]
</block>

<block Throughout>
/ trials = [1 = Fixiation]
</block>

<expt Test>
/ preinstructions = (start)
/ postinstructions = (end)
/ blocks = [1 = Instruction; 2-10 = Throughout_practice; 11-253 = Throughout]
</expt>

<data>
/ columns=[subject,values.trial_number,values.Cross_position,values.Circle_1,values.Position_1,values.Color_1,
values.Circle_2,values.Position_2,values.Color_2,values.response,values.response_time]
/ separatefiles = true
</data>
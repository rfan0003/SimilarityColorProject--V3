<text StartPractice>
/ items = ("You are going to do a few practice trials to make you be more familar with the experiment.
When you ready, please press SPACE button to start the practice trial.")
/ position = (50%,50%)
/ fontstyle = ("Arial", 2.8%, true)
/ txbgcolor = (127,127,127)
/ txcolor = yellow
</text>

<text EndPractice>
/ items = ("You have finished the practice trial.
Next page will be the formal test. 
If you are ready, please press SPACE button to start the experiment.")
/ position = (50%,50%)
/ fontstyle = ("Arial", 2.8%, true)
/ txbgcolor = (127,127,127)
/ txcolor = yellow
</text>


<text title>
/ items = ("Practice Trial")
/ position = (50%,5%)
/ fontstyle = ("Arial", 2.8%, true)
/ txbgcolor = (127,127,127)
/ txcolor = yellow
</text>

<values>
/order_practice = 0
</values>

<trial Fixiation_practice>
/ stimulusframes = [1 = cross,title]
/ timeout = 500
/ recorddata = false
/ ontrialend = [
	values.order_practice += 1;
]
/ branch = [
	trial.PresentCircles_practice
]
</trial>

<counter PracticeCounter>
/ select = noreplace(1-9)
/ selectionrate = block
</counter>

<trial PresentCircles_practice>
/ ontrialbegin = [
	values.angle_1 = rand(-90,90);
	values.angle_3 = rand(values.range_of_P_min,values.range_of_P_max);
	if(values.angle_1 < 0){
		if(abs(values.angle_1) > 90 - values.angle_min_F){
			values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
		}else if (abs(values.angle_1) <= 90 - values.angle_min_F){
			if(counter.F2_position.selectedvalue == -1){
				values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
			}else{
				values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
			}
		}
	}else{
		if(values.angle_1 > 90 - values.angle_min_F){
			values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
		}else if (values.angle_1 <= 90 - values.angle_min_F){
			if(counter.F2_position.selectedvalue == -1){
				values.angle_2 = rand(values.angle_1 + values.angle_min_F,90);
			}else{
				values.angle_2 = rand(-90,values.angle_1 - values.angle_min_F);
			}
		}
	}
	
	if(values.angle_3 < 0){
		if(abs(values.angle_3) > values.range_of_P_max - values.angle_min_P){
			values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
		}else if(abs(values.angle_3) <= values.range_of_P_max - values.angle_min_P){
			if(counter.P2_position.selectedvalue == -1){
				values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
			}else{
				values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
			}
		}
	}else{
		if(values.angle_3 > values.range_of_P_max - values.angle_min_P){
			values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
		}else if(values.angle_3 <= values.range_of_P_max - values.angle_min_P){
			if(counter.P2_position.selectedvalue == -1){
				values.angle_4 = rand(values.angle_3 + values.angle_min_P,values.range_of_P_max);
			}else{
				values.angle_4 = rand(values.range_of_P_min,values.angle_3 - values.angle_min_P);
			}
		}
	}
	
	if(counter.PracticeCounter.selectedvalue == 1 ||counter.PracticeCounter.selectedvalue == 2||counter.PracticeCounter.selectedvalue == 3){
		trial.PresentCircles_practice.insertstimulusframe(text.cross,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.F1,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.F2,1);
		trial.PresentCircles_practice.insertstimulusframe(text.title,1);
		if(counter.PracticeCounter.selectedvalue == 1){
			shape.F1.color = values.color1;
			shape.F2.color = values.color9;
		}else if(counter.PracticeCounter.selectedvalue == 2){
			shape.F1.color = values.color2;
			shape.F2.color = values.color8;
		}else if(counter.PracticeCounter.selectedvalue == 3){
			shape.F1.color = values.color3;
			shape.F2.color = values.color7;
		}
	}else if(counter.PracticeCounter.selectedvalue == 4 ||counter.PracticeCounter.selectedvalue == 5||counter.PracticeCounter.selectedvalue == 6){
		trial.PresentCircles_practice.insertstimulusframe(text.cross,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.F1,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.P1,1);
		trial.PresentCircles_practice.insertstimulusframe(text.title,1);
		if(counter.PracticeCounter.selectedvalue == 4){
			shape.F1.color = values.color4;
			shape.P1.color = values.color6;
		}else if(counter.PracticeCounter.selectedvalue == 5){
			shape.F1.color = values.color5;
			shape.P1.color = values.color5;
		}else if(counter.PracticeCounter.selectedvalue == 6){
			shape.F1.color = values.color6;
			shape.P1.color = values.color4;
		}
	}else{
		trial.PresentCircles_practice.insertstimulusframe(text.cross,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.P1,1);
		trial.PresentCircles_practice.insertstimulusframe(shape.P2,1);
		trial.PresentCircles_practice.insertstimulusframe(text.title,1);
		if(counter.PracticeCounter.selectedvalue == 7){
			shape.P1.color = values.color7;
			shape.P2.color = values.color3;
		}else if(counter.PracticeCounter.selectedvalue == 8){
			shape.P1.color = values.color8;
			shape.P2.color = values.color2;
		}else if(counter.PracticeCounter.selectedvalue == 9){
			shape.P1.color = values.color9;
			shape.P2.color = values.color1;
		}
	}
]
/ stimulusframes = []
/ timeout = 250
/ recorddata = false
/ ontrialend = [
	trial.PresentCircles_practice.clearstimulusframes();
]
/ branch = [
	trial.ResponseStep_practice
]
</trial>


<trial ResponseStep_practice>
/ ontrialbegin = [
	if(counter.PracticeCounter.selectedvalue == 1 ||counter.PracticeCounter.selectedvalue == 2||counter.PracticeCounter.selectedvalue == 3){
		trial.ResponseStep_practice.insertstimulusframe(text.cross,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.F1_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.F2_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(text.title,1);
	}else if (counter.PracticeCounter.selectedvalue == 4 ||counter.PracticeCounter.selectedvalue == 5||counter.PracticeCounter.selectedvalue == 6){
		trial.ResponseStep_practice.insertstimulusframe(text.cross,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.F1_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.P1_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(text.title,1);
	}else if (counter.PracticeCounter.selectedvalue == 7 ||counter.PracticeCounter.selectedvalue == 8||counter.PracticeCounter.selectedvalue == 9){
		trial.ResponseStep_practice.insertstimulusframe(text.cross,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.P1_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(picture.P2_resp,1);
		trial.ResponseStep_practice.insertstimulusframe(text.title,1);
	}
]
/ stimulusframes = []
/ recorddata = false
/ validresponse = (30,31,32,33,36,37,38,39)
/ ontrialend = [
	trial.ResponseStep_practice.clearstimulusframes();	
	if(trial.ResponseStep_practice.response == 30){
		values.response = 0;
	}else if(trial.ResponseStep_practice.response == 31){
		values.response = 1;
	}else if(trial.ResponseStep_practice.response == 32){
		values.response = 2;
	}else if(trial.ResponseStep_practice.response == 33){
		values.response = 3;
	}else if(trial.ResponseStep_practice.response == 36){
		values.response = 4;
	}else if(trial.ResponseStep_practice.response == 37){
		values.response = 5;
	}else if(trial.ResponseStep_practice.response == 38){
		values.response = 6;
	}else{
		values.response = 7;
	}
]
/ branch = [
	trial.feedback_practice
]
</trial>

<trial feedback_practice>
/ ontrialbegin = [
	if (values.response == 0){
		values.temp = 1;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 1){
		values.temp = 2;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 2){
		values.temp = 3;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 3){
		values.temp = 4;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 4){
		values.temp = 5;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 5){
		values.temp = 6;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else if(values.response == 6){
		values.temp = 7;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}else{
		values.temp = 8;
		text.feedback_present.insertitem(text.feedback_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.feedback_present,1);
		text.you_press_present.insertitem(text.you_press_resource.item(values.temp),1);
		trial.feedback_practice.insertstimulusframe(text.you_press_present,1);
	}
]
/ stimulusframes = []
/ recorddata = false
/ timeout = 1000
/ ontrialend = [
	trial.feedback_practice.clearstimulusframes();
	text.feedback_present.clearitems();
]
/ branch = [
	if (values.order_practice == 9){
		trial.EndPracticeTrail
	}
]
</trial>

<trial EndPracticeTrail>
/ stimulusframes = [1 = EndPractice]
/ validresponse = (57)
</trial>

